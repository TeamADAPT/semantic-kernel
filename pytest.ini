[pytest]
# Test discovery and execution configuration
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s (%(filename)s:%(lineno)s)
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test execution options
addopts = 
    --verbose
    --capture=no
    --strict-markers
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html
    --asyncio-mode=auto

# Custom markers
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    api: marks tests as API tests
    memory: marks tests as memory-related tests
    workflow: marks tests as workflow-related tests
    skill: marks tests as skill-related tests

# Environment variables
env =
    D:PYTHONPATH=src
    D:PYTHONUNBUFFERED=1

# Coverage configuration
[coverage:run]
branch = True
source = src

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    raise ImportError
    except ImportError:
    raise AssertionError

[coverage:html]
directory = coverage_html
